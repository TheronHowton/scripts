<################################################################################### 

Use this script to get all Intune policies to compare them based on 'Profile Type'.

Useage:
Change to the directory the script is in and execute.

Requirements:
 - Rights granted to a registered app in Azure AD.
    - https://docs.microsoft.com/en-us/mem/intune/developer/intune-graph-apis#intune-permission-scopes
 - Intune-PowerShell-SDK installed on machine executing script.
       - https://github.com/microsoft/Intune-PowerShell-SDK#one-time-setup-powershell-gallery
 - Admin rights to Azure AD.
    - At the moment, least privilege is unknown. Investigation underway.

This will perform the following actions:
    - Authenticates to MSGraph.
    - Gets details of Intune policies.
    - Checks for 'Output' directory under $PSScriptRoot, creates it if $false.
    - Outputs CSV files for policies based on 'Profile Type'.

v1.0 Created by Theron Howton, MCS
    04/23/2020

Modified:
v1.1 - 
    

###################################################################################>

# Update Graph to GOV and connect.
Update-MSGraphEnvironment -AuthUrl 'https://login.microsoftonline.us/common' -GraphBaseUrl 'https://graph.microsoft.us' -GraphResourceId 'https://graph.microsoft.us' -SchemaVersion 'beta'
Connect-MSGraph | Out-Null

$date = Get-Date -Format yyyyHHdd-hhmm
$policies = Get-IntuneDeviceConfigurationPolicy
$dataTypes = $policies | select '@odata.type'

# Check for Output directory, create if $false.
If(!(Test-Path $PSScriptRoot\Output)){New-Item -ItemType Directory -Path $PSScriptRoot\Output | Out-Null}
$outputPath = "$PSScriptRoot\Output"

# Get all Intune policies and generate CSVs.
Foreach ($policy in $policies){
    $dataType = $policy | select '@odata.type'
    $dT = $dataType.'@odata.type'.Split(".")[2]
    If($dT -eq "windows10GeneralConfiguration"){$dt = $dT -Replace "General","DeviceRestrictions"}
    $policy | Export-Csv -Append $outputPath\$dT-$date.csv -Force
}

